"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/layout",{

/***/ "(app-pages-browser)/./src/app/globals.css":
/*!*****************************!*\
  !*** ./src/app/globals.css ***!
  \*****************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony default export */ __webpack_exports__[\"default\"] = (\"3cc16dc55f3d\");\nif (true) { module.hot.accept() }\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL3NyYy9hcHAvZ2xvYmFscy5jc3MiLCJtYXBwaW5ncyI6IjtBQUFBLCtEQUFlLGNBQWM7QUFDN0IsSUFBSSxJQUFVLElBQUksaUJBQWlCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL3NyYy9hcHAvZ2xvYmFscy5jc3M/MGE0ZSJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgZGVmYXVsdCBcIjNjYzE2ZGM1NWYzZFwiXG5pZiAobW9kdWxlLmhvdCkgeyBtb2R1bGUuaG90LmFjY2VwdCgpIH1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/app/globals.css\n"));

/***/ }),

/***/ "(app-pages-browser)/./src/utils/coordinates.ts":
/*!**********************************!*\
  !*** ./src/utils/coordinates.ts ***!
  \**********************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   CITIES: function() { return /* binding */ CITIES; },\n/* harmony export */   GLOBE_RADIUS: function() { return /* binding */ GLOBE_RADIUS; },\n/* harmony export */   easing: function() { return /* binding */ easing; },\n/* harmony export */   getAllCities: function() { return /* binding */ getAllCities; },\n/* harmony export */   getCameraPositionForCity: function() { return /* binding */ getCameraPositionForCity; },\n/* harmony export */   getCityBySlug: function() { return /* binding */ getCityBySlug; },\n/* harmony export */   getNextCity: function() { return /* binding */ getNextCity; },\n/* harmony export */   getPreviousCity: function() { return /* binding */ getPreviousCity; },\n/* harmony export */   latLngToVector3: function() { return /* binding */ latLngToVector3; },\n/* harmony export */   lerpAngle: function() { return /* binding */ lerpAngle; }\n/* harmony export */ });\n/* harmony import */ var three__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! three */ \"(app-pages-browser)/./node_modules/three/build/three.module.js\");\n\n// Globe radius for 3D calculations\nconst GLOBE_RADIUS = 2;\n/**\n * Convert latitude/longitude to 3D position on sphere\n */ function latLngToVector3(lat, lng) {\n    let radius = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : GLOBE_RADIUS;\n    const phi = (90 - lat) * (Math.PI / 180);\n    const theta = (lng + 180) * (Math.PI / 180);\n    const x = -(radius * Math.sin(phi) * Math.cos(theta));\n    const z = radius * Math.sin(phi) * Math.sin(theta);\n    const y = radius * Math.cos(phi);\n    return new three__WEBPACK_IMPORTED_MODULE_0__.Vector3(x, y, z);\n}\n/**\n * Calculate camera position for viewing a specific point on the globe\n */ function getCameraPositionForCity(lat, lng) {\n    let distance = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : 4.2;\n    const position = latLngToVector3(lat, lng, distance);\n    return position;\n}\n/**\n * City data with coordinates and metadata\n */ const CITIES = {\n    \"new-york\": {\n        slug: \"new-york\",\n        name: \"New York\",\n        coordinates: {\n            lat: 40.7128,\n            lng: -74.0060\n        },\n        position: [\n            0,\n            0,\n            0\n        ]\n    },\n    \"tokyo\": {\n        slug: \"tokyo\",\n        name: \"Tokyo\",\n        coordinates: {\n            lat: 35.6762,\n            lng: 139.6503\n        },\n        position: [\n            0,\n            0,\n            0\n        ]\n    },\n    \"washington-dc\": {\n        slug: \"washington-dc\",\n        name: \"Washington DC\",\n        coordinates: {\n            lat: 38.9072,\n            lng: -77.0369\n        },\n        position: [\n            0,\n            0,\n            0\n        ]\n    },\n    \"mountain-view\": {\n        slug: \"mountain-view\",\n        name: \"Mountain View\",\n        coordinates: {\n            lat: 37.4162,\n            lng: -122.0758\n        },\n        position: [\n            0,\n            0,\n            0\n        ]\n    },\n    \"los-angeles\": {\n        slug: \"los-angeles\",\n        name: \"Los Angeles\",\n        coordinates: {\n            lat: 34.0522,\n            lng: -118.2437\n        },\n        position: [\n            0,\n            0,\n            0\n        ]\n    },\n    \"copenhagen\": {\n        slug: \"copenhagen\",\n        name: \"Copenhagen\",\n        coordinates: {\n            lat: 55.6761,\n            lng: 12.5683\n        },\n        position: [\n            0,\n            0,\n            0\n        ]\n    },\n    \"toronto\": {\n        slug: \"toronto\",\n        name: \"Toronto\",\n        coordinates: {\n            lat: 43.6532,\n            lng: -79.3832\n        },\n        position: [\n            0,\n            0,\n            0\n        ]\n    }\n};\n// Calculate 3D positions for all cities\nObject.values(CITIES).forEach((city)=>{\n    const pos = latLngToVector3(city.coordinates.lat, city.coordinates.lng);\n    city.position = [\n        pos.x,\n        pos.y,\n        pos.z\n    ];\n});\n/**\n * Get city data by slug\n */ function getCityBySlug(slug) {\n    return CITIES[slug];\n}\n/**\n * Get all cities as an array\n */ function getAllCities() {\n    return Object.values(CITIES);\n}\n/**\n * Get the next city in the tour sequence\n */ function getNextCity(currentSlug) {\n    const sequence = [\n        \"new-york\",\n        \"washington-dc\",\n        \"mountain-view\",\n        \"los-angeles\",\n        \"tokyo\",\n        \"copenhagen\",\n        \"toronto\"\n    ];\n    const currentIndex = sequence.indexOf(currentSlug);\n    if (currentIndex === -1 || currentIndex === sequence.length - 1) {\n        return null;\n    }\n    return sequence[currentIndex + 1];\n}\n/**\n * Get the previous city in the tour sequence\n */ function getPreviousCity(currentSlug) {\n    const sequence = [\n        \"new-york\",\n        \"washington-dc\",\n        \"mountain-view\",\n        \"los-angeles\",\n        \"tokyo\",\n        \"copenhagen\",\n        \"toronto\"\n    ];\n    const currentIndex = sequence.indexOf(currentSlug);\n    if (currentIndex <= 0) {\n        return null;\n    }\n    return sequence[currentIndex - 1];\n}\n/**\n * Smooth interpolation between two angles (handles wrapping)\n */ function lerpAngle(start, end, factor) {\n    const difference = (end - start + Math.PI) % (2 * Math.PI) - Math.PI;\n    return start + difference * factor;\n}\n/**\n * Easing functions for smooth animations\n */ const easing = {\n    easeInOut: (t)=>t < 0.5 ? 2 * t * t : -1 + (4 - 2 * t) * t,\n    easeOut: (t)=>t * (2 - t),\n    easeIn: (t)=>t * t,\n    easeInOutCubic: (t)=>t < 0.5 ? 4 * t * t * t : (t - 1) * (2 * t - 2) * (2 * t - 2) + 1\n};\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/utils/coordinates.ts\n"));

/***/ })

});